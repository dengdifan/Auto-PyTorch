# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Docker image

on:
  push:
    # Push  to `master` or `development`
    branches:
      - master
      - development
      - fix-docker
  workflow_dispatch:

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
  
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
  
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          repository: automl/auto-pytorch/autopytorch
          tag_with_ref: true
          tags: ${{ steps.extract_branch.outputs.branch }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: automlorg/autopytorch
          tags: ${{ steps.extract_branch.outputs.branch }}

      - name: Docker Login
        run: docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        env:
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Pull Docker image
        run: docker pull ghcr.io/automl/auto-pytorch/autopytorch:$BRANCH
        env:
            BRANCH: ${{ steps.extract_branch.outputs.branch }}

      - name: Run image
        run: docker run -i -d --name unittester -v $GITHUB_WORKSPACE:/workspace -w /workspace ghcr.io/automl/auto-pytorch/autopytorch:$BRANCH
        env:
            BRANCH: ${{ steps.extract_branch.outputs.branch }}

      - name: Auto-PyTorch loaded
        run: docker exec  -i unittester python3 -c 'import autoPyTorch; print(f"Auto-PyTorch imported from {autoPyTorch.__file__}")'

      - name: Run unit testing
        run: docker exec  -i unittester python3 -m pytest -v test